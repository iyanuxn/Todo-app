{"version":3,"sources":["assets/header2.svg","assets/error.gif","firebase.js","components/Welcome.jsx","components/Note.jsx","utils/PrivateRoute.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","database","getDatabase","updateTodo","todo","username","db","getFirestore","setDoc","doc","Welcome","_useState","useState","window","localStorage","getItem","_useState2","Object","slicedToArray","isAuthenticated","setisAuthenticated","_useState3","_useState4","userName","setuserName","useEffect","data","setItem","JSON","parse","loginref","useRef","login","pageWrapper","document","querySelector","getElementById","addEventListener","navigate","slideWidth","clientWidth","scrollLeft","element","current","removeEventListener","signupref","signup","entryPoint","slideHeight","clientHeight","scrollTop","logindownref","nameref","emailref","passwordref","passwordconfirmref","loginemailref","loginpasswordref","_useState5","_useState6","NewSignUp","setNewSignUp","_useState7","_useState8","NewLogin","setNewLogin","_useState9","_useState10","error","seterror","_useState11","_useState12","errormsg","seterrormsg","useNavigate","_useState13","_useState14","passwordType","setpasswordType","_useState15","react_default","a","createElement","fi_index_esm","_useState16","passwordEye","setpasswordEye","readUserName","userId","userref","ref","onValue","snapshot","val","togglePassword","className","src","H2","alt","id","onClick","ri_index_esm","ErrorAlert","type","name","placeholder","e","preventDefault","email","value","password","setTimeout","signInWithEmailAndPassword","signIn","then","user","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","uid","stop","catch","errorCode","code","errorMessage","message","console","log","signInEmail","signInPassword","signInPasswordConfirm","length","includes","createUserWithEmailAndPassword","set","writeUserData","_callee2","_context2","Note","logstate","setlogstate","inputBar","setinputBar","toDo","setToDo","toDoref","location","reload","fetchTodo","_ref","Note_regeneratorRuntime","docSnap","todoData","getDoc","sent","exists","stringify","apply","this","arguments","toDoUpdate","newTask","setNewTask","updateData","setUpdateData","cancelEdit","newTasks","map","task","objectSpread","edit","Fragment","md_index_esm","removeItem","onChange","target","newEntry","title","status","test","concat","toConsumableArray","key","defaultValue","confirmEdit","markDone","editTask","filter","newId","forEach","deleteTask","ti_index_esm","PrivateRoute","react_router","to","App","loading","setloading","spinner","classList","add","react_router_dom","path","src_components_Welcome","utils_PrivateRoute","src_components_Note","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0a5ea408.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header2.51207a6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.b454f20c.gif\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCaNVKiWmsO0vIAZEo1r6hMj5i4Crb2I-w\",\r\n  authDomain: \"todo-app-auth-c8abe.firebaseapp.com\",\r\n  projectId: \"todo-app-auth-c8abe\",\r\n  storageBucket: \"todo-app-auth-c8abe.appspot.com\",\r\n  messagingSenderId: \"677360145985\",\r\n  appId: \"1:677360145985:web:2a8a7015f59e95c06898c0\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst database = getDatabase(app);\r\n// const firestore = getFirestore(app);\r\n\r\nexport function signUp(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function signIn(email, password) {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function writeUserData(name, email, userId) {\r\n  const db = database;\r\n  // stores in database with the header called users then store with unique userId\r\n  set(ref(db, 'users/' + userId), {\r\n    username: name,\r\n    email: email,\r\n  });}\r\n\r\nexport function updateTodo(todo, username) {\r\n  const db = getFirestore();\r\n  setDoc(doc(db, \"Todos\", username), todo)\r\n}\r\n\r\n// export function getTodos(username) {\r\n//   const db = getFirestore();\r\n//   return doc(db, \"Todos\", username);\r\n// }","import React, { useRef, useEffect, useState } from 'react'\r\nimport './Welcome.css'\r\nimport H2 from '../assets/header2.svg'\r\nimport ErrorAlert from '../assets/error.gif'\r\nimport { signUp, writeUserData, signIn } from '../firebase';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getDatabase, ref, onValue } from \"firebase/database\";\r\n\r\nconst Welcome = () => {\r\n\r\n  const [isAuthenticated, setisAuthenticated] = useState(window.localStorage.getItem('isAuthenticated') || false);\r\n\r\n  const [userName, setuserName] = useState(window.localStorage.getItem('UserName') || '');\r\n  useEffect(() => {\r\n    const data = localStorage.getItem('UserName');\r\n    if (data !== null) {\r\n      setuserName(data);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('UserName', userName);\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem('isAuthenticated');\r\n    if (data !== null) setisAuthenticated(JSON.parse(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('isAuthenticated', (isAuthenticated));\r\n  }, [isAuthenticated]);\r\n\r\n\r\n  const loginref = useRef();\r\n\r\n  useEffect(() => {\r\n    const login = () => {\r\n      const pageWrapper = document.querySelector(\".page-wrapper\");\r\n      const loginBtn = document.getElementById(\"login\");\r\n\r\n      loginBtn.addEventListener(\"click\", () => {\r\n        if (isAuthenticated === \"true\") {\r\n          navigate('/note')\r\n        }\r\n        else {\r\n          const slideWidth = pageWrapper.clientWidth;\r\n          pageWrapper.scrollLeft += slideWidth;\r\n        }\r\n      });\r\n    };\r\n\r\n    const element = loginref.current;\r\n\r\n    element.addEventListener('click', login);\r\n\r\n    return () => {\r\n      element.removeEventListener('click', login);\r\n    };\r\n  }, []);\r\n\r\n\r\n  const signupref = useRef();\r\n\r\n  useEffect(() => {\r\n    const signup = () => {\r\n      const entryPoint = document.querySelector(\".entry_point\");\r\n      const signupBtn = document.getElementById(\"signup\");\r\n\r\n      signupBtn.addEventListener(\"click\", () => {\r\n        const slideHeight = entryPoint.clientHeight;\r\n        entryPoint.scrollTop -= slideHeight;\r\n      });\r\n    };\r\n\r\n    const element = signupref.current;\r\n\r\n    element.addEventListener('click', signup);\r\n\r\n    return () => {\r\n      element.removeEventListener('click', signup);\r\n    };\r\n  }, []);\r\n\r\n  const logindownref = useRef();\r\n\r\n  useEffect(() => {\r\n    const login = () => {\r\n      const entryPoint = document.querySelector(\".entry_point\");\r\n      const loginBtn = document.getElementById(\"logindown\");\r\n\r\n      loginBtn.addEventListener(\"click\", () => {\r\n        const slideHeight = entryPoint.clientHeight;\r\n        entryPoint.scrollTop += slideHeight;\r\n      });\r\n    };\r\n\r\n    const element = logindownref.current;\r\n\r\n    element.addEventListener('click', login);\r\n\r\n    return () => {\r\n      element.removeEventListener('click', login);\r\n    };\r\n  }, []);\r\n\r\n\r\n  const nameref = useRef();\r\n  const emailref = useRef();\r\n  const passwordref = useRef();\r\n  const passwordconfirmref = useRef();\r\n\r\n  const loginemailref = useRef();\r\n  const loginpasswordref = useRef();\r\n\r\n  const [NewSignUp, setNewSignUp] = useState('Sign Up');\r\n  const [NewLogin, setNewLogin] = useState('Login');\r\n  const [error, seterror] = useState('error-modal');\r\n  const [errormsg, seterrormsg] = useState('');\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [passwordType, setpasswordType] = useState(\"password\");\r\n  const [passwordEye, setpasswordEye] = useState(<FiEyeOff />);\r\n\r\n  function readUserName(userId) {\r\n    const db = getDatabase();\r\n    const userref = ref(db, 'users/' + userId + '/username');\r\n    onValue(userref, (snapshot) => {\r\n      const data = snapshot.val();\r\n      localStorage.setItem('UserName', data);\r\n    });\r\n  }\r\n\r\n  function togglePassword() {\r\n    if (passwordType === \"password\") {\r\n      setpasswordType(\"text\");\r\n      setpasswordEye(<FiEye />);\r\n    }\r\n    else {\r\n      setpasswordType(\"password\");\r\n      setpasswordEye(<FiEyeOff />);\r\n    }\r\n  }\r\n\r\n  function handleLogin(e) {\r\n    e.preventDefault();\r\n    setisAuthenticated(true);\r\n    setNewLogin(<div className=\"ld ld-ring ld-cycle\" />);\r\n\r\n    const email = loginemailref.current.value;\r\n    const password = loginpasswordref.current.value;\r\n\r\n    setTimeout(() => {\r\n      if (email === '' || password === '') {\r\n        seterror('error-modal show-error');\r\n        seterrormsg('Please fill all the fields');\r\n        setisAuthenticated(false);\r\n      }\r\n      if (email !== '' && password !== '') {\r\n        signIn(email, password)\r\n          .then((user) => {\r\n            //wait for user name to be fetched before redirecting\r\n            (async () => {\r\n              readUserName(user.user.uid);\r\n              await setNewLogin('Login');\r\n              await setisAuthenticated(true);\r\n              await navigate('/note');\r\n            })();\r\n          })\r\n          .catch((error) => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log(errorCode, errorMessage);\r\n\r\n            if (errorCode === 'auth/network-request-failed') {\r\n              seterrormsg(\"Network error. Try again\")\r\n            }\r\n            if (errorCode === 'auth/user-not-found') {\r\n              seterrormsg(\"User not found\")\r\n            }\r\n            if (errorCode === 'auth/wrong-password') {\r\n              seterrormsg(\"Wrong password\")\r\n            }\r\n            if (errorCode === 'auth/too-many-requests') {\r\n              seterrormsg(\"Too many requests. Try again later\")\r\n            }\r\n            if (errorCode === 'auth/invalid-email') {\r\n              seterrormsg(\"Invalid email\")\r\n            }\r\n            if (errorCode === 'auth/user-disabled') {\r\n              seterrormsg(\"User disabled\")\r\n            }\r\n            seterror('error-modal show-error');\r\n            setisAuthenticated(false)\r\n            setNewLogin('Login');\r\n          });\r\n      }\r\n    }, 1500);\r\n  }\r\n\r\n  function handleSignup(e) {\r\n    e.preventDefault();\r\n    setisAuthenticated(true)\r\n    setNewSignUp(<div className=\"ld ld-ring ld-cycle\" />);\r\n    const name = nameref.current.value;\r\n    const signInEmail = emailref.current.value;\r\n    const signInPassword = passwordref.current.value;\r\n    const signInPasswordConfirm = passwordconfirmref.current.value;\r\n    setTimeout(() => {\r\n      // Validation\r\n      //empty fields\r\n      //password length\r\n      //password match\r\n      if (signInPassword.length < 6 && (name || signInEmail === '')) {\r\n        seterrormsg(<ul>\r\n          <li>Please fill in all fields</li>\r\n          <li>Ensure password is at least 6 characters</li>\r\n        </ul>)\r\n        seterror('error-modal show-error');\r\n        setisAuthenticated(false)\r\n      }\r\n      if (signInPassword.length < 6 && (name && signInEmail !== '')) {\r\n        seterrormsg(<ul>\r\n          <li>Ensure password is at least 6 characters</li>\r\n        </ul>)\r\n        seterror('error-modal show-error');\r\n        setisAuthenticated(false)\r\n      }\r\n      //password match\r\n      if (signInPassword !== signInPasswordConfirm && (name || signInEmail === '')) {\r\n        seterrormsg(<ul>\r\n          <li>Please fill in all fields</li>\r\n          <li>Passwords do not match</li>\r\n        </ul>)\r\n        seterror('error-modal show-error');\r\n        setisAuthenticated(false)\r\n      }\r\n      if (signInPassword !== signInPasswordConfirm && (name && signInEmail !== '')) {\r\n        seterrormsg(<ul>\r\n          <li>Passwords do not match</li>\r\n        </ul>)\r\n        seterror('error-modal show-error');\r\n        setisAuthenticated(false)\r\n      }\r\n      if (name.includes(\".\" || \"#\" || \"$\" || \"[\" || \"]\")) {\r\n        seterrormsg(\"Name cannot contain special characters\")\r\n        seterror('error-modal show-error');\r\n        setisAuthenticated(false)\r\n      }\r\n      // if correct\r\n      if (signInPassword === signInPasswordConfirm && (name && signInEmail !== '') && (signInPassword.length >= 6)) {\r\n        setNewSignUp(<div className=\"ld ld-ring ld-cycle\" />)\r\n        // alert('Sign Up Successful')\r\n        seterror('error-modal');\r\n        // signUp\r\n        // write data and login\r\n        signUp(signInEmail, signInPassword)\r\n          .then(function (user) {\r\n            writeUserData(name, signInEmail, user.user.uid);\r\n            (async () => {\r\n              readUserName(user.user.uid);\r\n              await setNewSignUp('Sign Up')\r\n              await setisAuthenticated(true)\r\n              await navigate('/note');\r\n            })();\r\n          })\r\n          .catch(function (error) {\r\n            var errorCode = error.code\r\n            if (errorCode === 'auth/network-request-failed') {\r\n              seterrormsg(\"Network error. Try again\")\r\n            }\r\n            if (errorCode === 'auth/too-many-requests') {\r\n              seterrormsg(\"Too many requests. Try again later\")\r\n            }\r\n            if (errorCode === 'auth/email-already-in-use') {\r\n              seterrormsg(\"Email already in use\")\r\n            }\r\n            if (errorCode === 'auth/invalid-email') {\r\n              seterrormsg(\"Invalid email\")\r\n            }\r\n\r\n            seterror('error-modal show-error');\r\n            setisAuthenticated(false)\r\n            setNewSignUp('Sign Up')\r\n          })\r\n        // from function, requires name, email and userId (in this case is also the name)\r\n      }\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-wrapper\">\r\n\r\n        <div className=\"welcome\">\r\n          <img className='welcome_img' src={H2} alt=\"\" />\r\n          <span className='welcome_text'>\r\n            Welcome\r\n            <p>Tons of things to do but can't keep track?\r\n              We know you'll forget that important task and that's why we are here</p>\r\n          </span>\r\n          <button className='btn btn-primary' id='login' ref={loginref}>Take notes now!</button>\r\n        </div>\r\n\r\n        <div className=\"entry_point\">\r\n          <div className={error}>\r\n            <div className='error-modal-close' onClick={() => { seterror('error-modal'); setNewSignUp('Sign Up'); setNewLogin('Login') }}><RiCloseCircleLine /></div>\r\n            <div className=\"error-modal-main\">\r\n              <img className='error-img' src={ErrorAlert} alt=\"\" />\r\n              <div className='error-msg'>{errormsg}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"login\">\r\n            <div className='login_content'>\r\n              <h1>Login</h1>\r\n              <input ref={loginemailref} type=\"mail\" name=\"\" id=\"\" placeholder='Email' />\r\n              <div className=\"password_container\">\r\n                <input ref={loginpasswordref} type={passwordType} name=\"\" id=\"\" placeholder='Password' />\r\n                <i className='password_visibility' onClick={togglePassword} >{passwordEye}</i>\r\n              </div>\r\n              <div className=\"login_btn_container\">\r\n                <button className='btn btn-primary' onClick={handleLogin}>{NewLogin}</button>\r\n                {/* <div className='forgot_password'>Forgot Password?</div> */}\r\n              </div>\r\n              <div className=\"signup_alt\">\r\n                Don't have an account?\r\n                <span id='logindown' ref={logindownref}>Sign up</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"signup\">\r\n            <div className='signup_content'>\r\n\r\n              <h1>Sign up</h1>\r\n\r\n              <input ref={nameref} type=\"text\" name=\"\" id=\"username\" placeholder='Name' />\r\n              <input ref={emailref} type=\"mail\" name=\"\" id=\"mail\" placeholder='Email' />\r\n              <span className='password-tip'>Password should be no less than 6  characters</span>\r\n              <div className=\"password_container\">\r\n                <input ref={passwordref} type={passwordType} name=\"\" id=\"password\" placeholder='Password' />\r\n                <i className='password_visibility' onClick={togglePassword} >{passwordEye}</i>\r\n              </div>\r\n              <input ref={passwordconfirmref} type=\"password\" name=\"\" id=\"passwordConfirm\" placeholder='Confirm Password' />\r\n              <div className=\"sign_btn_container\">\r\n                <button className='btn btn-primary' onClick={handleSignup}>{NewSignUp}</button>\r\n              </div>\r\n              <div className=\"signup_alt\">\r\n                Already have an account?\r\n                <span id='signup' ref={signupref}>Login</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Note.css'\r\nimport { MdOutlineCheck, MdOutlineClose, MdModeEditOutline, MdDeleteOutline, MdOutlineLogout } from 'react-icons/md'\r\nimport { updateTodo } from '../firebase';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { TiPlus } from 'react-icons/ti'\r\n\r\nconst Note = () => {\r\n\r\n  const [logstate, setlogstate] = useState(\"Hello\");\r\n  const [inputBar, setinputBar] = useState(\"add_task hide_task\");\r\n\r\n  const [userName, setuserName] = useState(window.localStorage.getItem('UserName') || '');\r\n  const data = localStorage.getItem('UserName');\r\n\r\n  useEffect(() => {\r\n    if (data !== null) {\r\n      setuserName(data);\r\n      localStorage.setItem('UserName', userName);\r\n    }\r\n  }, []);\r\n\r\n  // Tasks (ToDo List) State\r\n  const [toDo, setToDo] = useState(window.localStorage.getItem('Todos') ? JSON.parse(window.localStorage.getItem('Todos')) : []);\r\n\r\n\r\n  const db = getFirestore();\r\n  const toDoref = doc(db, \"Todos\",\r\n    // find username else reload page\r\n    userName ? userName :\r\n      // reload after 2 seconds\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 2000));\r\n\r\n  // used to fetch the data from your firestore database\r\n  const fetchTodo = async () => {\r\n    // attempts to fetch data for the referenced chart\r\n    const docSnap = await getDoc(toDoref);\r\n\r\n    let todoData = [];\r\n\r\n    if (docSnap.exists()) {\r\n      // the name of the field of the array\r\n      todoData = docSnap.data().toDo;\r\n    }\r\n    else {\r\n      // The document doesn't exist\r\n      console.log(\"No such document!\");\r\n    }\r\n    // setToDo([...todoData]);\r\n    setToDo(todoData);\r\n    //update local storage on page load\r\n    localStorage.setItem('Todos', JSON.stringify(toDo));\r\n  };\r\n\r\n  // fetch data on page load\r\n  useEffect(() => {\r\n    fetchTodo();\r\n  }, []);\r\n\r\n  const toDoUpdate = { toDo }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('Todos', JSON.stringify(toDo));\r\n  }, [toDo]);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem('Todos');\r\n    if (data) {\r\n      setToDo(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  // update when toDo is changed\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      updateTodo(toDoUpdate, userName);\r\n    }, 3000);\r\n  }, [toDo]);\r\n\r\n\r\n  // Temp State\r\n  const [newTask, setNewTask] = useState('');\r\n  const [updateData, setUpdateData] = useState('');\r\n\r\n  //logOut\r\n  const handlelogOut = () => {\r\n    setlogstate(\"Goodbye\");\r\n    updateTodo(toDoUpdate, userName);\r\n    setTimeout(() => {\r\n      window.localStorage.removeItem('UserName');\r\n      window.localStorage.removeItem('Todos');\r\n      window.localStorage.removeItem('isAuthenticated');\r\n      window.location.reload();\r\n    }, 3000);\r\n  }\r\n\r\n  //show input bar\r\n  const showInput = () => {\r\n    setinputBar(\"add_task\");\r\n  }\r\n\r\n  // Add task \r\n  ////////////////////////////////////////// \r\n  const addTask = () => {\r\n    /* This is a conditional statement that checks if the newTask variable is not empty. If it is not\r\n    empty, it will add a new task to the toDo array. */\r\n    /* Checking if the newTask variable is not empty. If it is not empty, it will add a new task to the\r\n    toDo array. */\r\n    if (newTask) {\r\n      let num = toDo.length + 1;\r\n      let newEntry = {\r\n        id: num,\r\n        title: newTask,\r\n        status: false,\r\n        edit: false,\r\n      }\r\n\r\n      if (!newEntry.title || /^\\s*$/.test(newEntry.title)) {\r\n        return;\r\n      }\r\n      setToDo([...toDo, newEntry]);\r\n      setNewTask('');\r\n    }\r\n    else {\r\n      setinputBar(\"add_task hide_task\");\r\n    }\r\n  }\r\n\r\n  // Delete task \r\n  ////////////////////////////////////////// \r\n  const deleteTask = (id) => {\r\n    /* Filtering the toDo array and returning a new array with the task that has the id that is not equal\r\n    to the id that is passed in. */\r\n    // basically keeps whatever is not equal to the id that is passed in\r\n    let newTasks = toDo.filter((task) => task.id !== id);\r\n    // change id for all tasks to be serially numbered again\r\n    let newId = 1;\r\n    newTasks.forEach((task) => {\r\n      task.id = newId;\r\n      newId++;\r\n    })\r\n    setToDo(newTasks);\r\n  }\r\n\r\n  // mark task as done or completed\r\n  ////////////////////////////////////////// \r\n  const markDone = (id) => {\r\n    const newTasks = toDo.map((task) => {\r\n      if (task.id === id) {\r\n        return ({ ...task, status: !task.status })\r\n      }\r\n      return task;\r\n    });\r\n    setToDo(newTasks);\r\n  }\r\n\r\n  // edit and update is a work in progress\r\n  // cancel update\r\n  ////////////////////////////////////////// \r\n  const cancelEdit = (id) => {\r\n    const newTasks = toDo.map((task) => {\r\n      if (task.id === id) {\r\n        return ({ ...task, edit: !task.edit })\r\n      }\r\n      return task;\r\n    });\r\n    setToDo(newTasks);\r\n    setUpdateData('');\r\n  }\r\n\r\n  // Change task for update\r\n  //////////////////////////////////////////\r\n  const editTask = (id) => {\r\n    const newTasks = toDo.map((task) => {\r\n      if (task.id === id) {\r\n        return ({ ...task, edit: !task.edit })\r\n      }\r\n      return task;\r\n    });\r\n    setToDo(newTasks);\r\n  }\r\n\r\n  // update task \r\n  ////////////////////////////////////////// \r\n  const confirmEdit = (id) => {\r\n    if (updateData !== '') {\r\n      const newTasks = toDo.map((task) => {\r\n        if (task.id === id) {\r\n          return ({ ...task, title: updateData, edit: !task.edit })\r\n        }\r\n        return task;\r\n      });\r\n      setToDo(newTasks);\r\n    }\r\n    else { cancelEdit(id) }\r\n    console.log(updateData);\r\n    setUpdateData('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"header\">\r\n        <h2>{logstate}, {userName}</h2>\r\n        <MdOutlineLogout onClick={handlelogOut} className='logout' />\r\n      </div>\r\n      <div className='body'>\r\n        <div>\r\n          <div className={inputBar}>\r\n            <input value={newTask} onChange={e => setNewTask(e.target.value)} />\r\n            <button onClick={addTask}>{newTask && newTask ? <MdOutlineCheck /> : <MdOutlineClose />}</button>\r\n          </div>\r\n\r\n          {/* If there are no to dos in state, display a message   */}\r\n          {toDo && toDo.length ? '' :\r\n            <div className='no_tasks'>\r\n              No tasks yet...\r\n            </div>\r\n          }\r\n\r\n          {/* Show to dos   */}\r\n          {/* set edit condition here */}\r\n          <div className=\"main\">\r\n            {toDo && toDo\r\n              .map((task) => {\r\n                return (\r\n                  /* A React component that is used to group a list of children without adding extra nodes to the DOM. */\r\n                  <React.Fragment key={task.id}>\r\n                    {task.edit ?\r\n                      //edit task\r\n                      <div className='tasks_pending'>\r\n                        <div className=\"edit_todo\">\r\n                          <input type=\"text\" defaultValue={task.title} onChange={e => setUpdateData(e.target.value)} />\r\n                          <div className=\"alt_icons\">\r\n                            <button title=\"Done\" onClick={() => confirmEdit(task.id)}>\r\n                              <MdOutlineCheck />\r\n                            </button>\r\n                            <button title=\"Cancel\" onClick={() => cancelEdit(task.id)}>\r\n                              <MdOutlineClose />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      <div\r\n                        // if task status is true, add class to this div named as done\r\n                        className={task.status ? 'tasks_completed tasks_pending' : 'tasks_pending'}>\r\n                        <div className=\"todo_content\">\r\n                          <button className='check' onClick={() => markDone(task.id)} title=\"Completed / Not Completed\"></button>\r\n                          <span className=\"task_text\">{task.title}</span>\r\n                          <div className=\"alt_icons\">\r\n                            {/* only show when not completed */}\r\n                            {task.status ? null : (\r\n                              <button title=\"Edit\" onClick={() => editTask(task.id)}>\r\n                                <MdModeEditOutline />\r\n                              </button>\r\n                            )}\r\n                            <button onClick={() => deleteTask(task.id)} title=\"Delete\">\r\n                              <MdDeleteOutline />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"add_note\">\r\n        <button onClick={showInput}>\r\n          <TiPlus />\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\nimport { Outlet, Navigate } from 'react-router-dom'\r\n\r\nconst useAuth = () => {\r\n    const isAuthenticated = JSON.parse(localStorage.getItem('isAuthenticated'));\r\n    if (isAuthenticated){\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\n\r\nconst PrivateRoute = () => {\r\n    \r\n    const auth = useAuth();\r\n  return (\r\n    /* A ternary operator. If auth.isAuthenticated is true, then it will render the Outlet component.\r\n    If auth.isAuthenticated is false, then it will render the Navigate component. */\r\n    auth? <Outlet /> : <Navigate to=\"/\" />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Welcome from './components/Welcome'\nimport Note from './components/Note';\nimport PrivateRoute from './utils/PrivateRoute';\n\nconst App = () => {\n  const [loading, setloading] = useState(true);\n  const spinner = document.getElementById('preloader')\n  if (spinner) {\n    setTimeout((() => {\n      spinner.classList.add('loaded');\n      setloading(false)\n    }), 2000)\n  }\n\n  return (\n    // if not loading display content (not complsory tho)\n    !loading && (\n\n      <div>\n        <Router>\n          <Routes>\n            <Route path=\"/\" element={<Welcome />} />\n            <Route element={<PrivateRoute/>}>\n              <Route path=\"/note\" element={<Note />} />\n            </Route>\n            <Route path=\"/note\" element={<Note />} />\n          </Routes>\n        </Router>\n      </div>\n\n    )\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);"],"sourceRoot":""}